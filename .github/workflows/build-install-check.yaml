name: R CMD Check

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-install-check:
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.config.image }}:${{ matrix.config.tag }}
    name: ${{ matrix.config.image }}, version ${{ matrix.config.tag }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {image: rocker/tidyverse, tag: '3.6.3'}
          - {image: rocker/tidyverse, tag: '4.1.0'}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          path: ${{ github.event.repository.name }}

      - name: Install dependencies
        run: |
          setwd("${{ github.event.repository.name }}")
          options(repos = c(CRAN = "https://cloud.r-project.org/"))
          if (file.exists("renv.lock")) {
            renv::restore()
          } else {
            install.packages("remotes", upgrade = "never")
            remotes::install_deps(dependencies = TRUE, upgrade = "never")
          }
        shell: Rscript {0}

      - name: Build R package
        run: |
          R CMD build ${{ github.event.repository.name }}
          echo "PKGBUILD=$(echo *.tar.gz)" >> $GITHUB_ENV
        shell: bash

      - name: Run R CMD CHECK
        run: R CMD check --no-manual ${{ env.PKGBUILD }}
        shell: bash

      - name: Catch errors, warnings in R CMD check output
        id: catch-errors
        run: |
          result=$(tail -1 ${{ github.event.repository.name }}.Rcheck/00check.log)
          [[ $result != Status:* ]] && echo "::debug::{could not get Status line}" && exit 1
          [[ $result == *"ERROR"* ]] && echo "::debug::{checks results in errors}" && exit 1
          [[ $result == *"WARNINGs"* ]] && echo "::debug::{checks results in warnings}" && exit 1
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.config.image }}:${{ matrix.config.tag }}-results
          path: ${{ github.event.repository.name }}.Rcheck/00check.log

      - name: Install R package
        run: R CMD INSTALL ${{ env.PKGBUILD }}
        shell: bash
