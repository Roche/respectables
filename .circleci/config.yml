# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

jobs:
  build_check_install:
    parameters:
      package:
        type: string
    docker:
      - image: rocker/tidyverse:3.6.2
    steps:
      - checkout:
          path: pkgsource
      - run:
          name: "Install tinytest"
          command: R --vanilla -e "chooseCRANmirror(ind=1L);install.packages('tinytest')"
      - run:
          name: "Build R package"
          command: |
            R CMD build pkgsource
            echo "export PKGBUILD=$(echo *.tar.gz)" >> $BASH_ENV
      - run:
          name: "Install R package"
          command: R CMD INSTALL ${PKGBUILD}
      - run:
          name: "Check R package"
          command: |
            R CMD check --no-manual ${PKGBUILD}
            result=$(tail -1 << parameters.package >>.Rcheck/00check.log)
            [[ $result = Status:* ]] || echo "could not get Status line"; set -o errexit
            [[ $result = *"Error"* ]] && echo "checks result in errors"; set -o errexit
      - run:
         name: "Prepare Artifacts"
         command: |
           mkdir artifacts
           cp ${PKGBUILD} artifacts/
      - store_artifacts:
          path: "artifacts"
          destination: /
      - store_test_results:
          path: << parameters.package >>.Rcheck/tests

  roxygen:
    docker:
      - image: rocker/tidyverse:3.6.2
    steps:
      - checkout
      - run:
          name: "check if manuals are upto date with roxygen comments"
          command: |
            R -e "roxygen2::roxygenize('.', roclets = c('rd', 'collate', 'namespace'))"
            if [[ -z $(git status -s) ]]
            then
              echo "manuals are not upto date with roxygen comments"
              echo "please rerun roxygen2::roxygenize('.', roclets = c('rd', 'collate', 'namespace'))"
              set -o errexit
            else
              echo "manuals are upto date with roxygen comments"
            fi

  pkgdown:
    docker:
      - image: rocker/tidyverse:3.6.2
    steps:
      - checkout
      - run:
          name: "create pkgdown website"
          command: R -e 'pkgdown::build_site(".", devel = FALSE)'
      - store_artifacts:
          path: docs
          destination: pkgdown
      - persist_to_workspace:
          root: docs
          paths: ./

  TODOs:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout:
          path: pkgsource
      - run:
          command: grep -R -A 2 "TODO" pkgsource/R > TODOs.txt
      - store_artifacts:
          path: TODOs.txt
          destination: TODOs.txt

  docs-publish:
    # Publish docs to GitHub Pages
    docker:
      - image: node:12
    steps:
      - checkout
      - attach_workspace:
          at: docs
      - run:
          name: Disable jekyll builds
          command: touch docs/.nojekyll
      - run:
          name: Install and configure dependencies
          command: |
            npm install -g --silent gh-pages@2.2.0
            git config user.email "circleci@example.com"
            git config user.name "circleci-build"
      - add_ssh_keys:
          fingerprints:
            - "82:e1:20:c6:ae:43:b2:12:6c:ad:1f:e0:24:40:d5:8d"
      - run:
          name: Deploy docs to gh-pages branch
          command: gh-pages --dotfiles --message "[skip ci] Publish GiHub Pages" --dist docs/

workflows:
  version: 2
  Rworkflow:
    jobs:
      - roxygen
      - pkgdown:
          requires:
            - roxygen
      - build_check_install:
          package: respectables
          requires:
            - roxygen
      - TODOs
      - docs-publish:
          requires:
            - pkgdown
          filters:
            branches:
              only: master
